import google.generativeai as genai
from decouple import config

genai.configure(api_key=config("GEMINI_API_KEY"))

model = genai.GenerativeModel("models/gemini-1.5-flash-latest")

def generate_deroulement(texte_brut):
    prompt = f"""
    أريد منك استخراج وتحرير قسم "سير الجلسة" (Déroulement de la séance) من محضر رسمي لجلسة برلمانية مغربية، وذلك انطلاقاً من النص التالي الذي يتضمن تفريغاً حرفياً للمداخلات.

    ينبغي أن يكون هذا القسم مكتوباً باللغة العربية الفصحى، بأسلوب تقريري رسمي ومحايد كما هو معتمد في محاضر البرلمان المغربي، وأن يتضمن:
    - تسلسل المداخلات كما وقعت.
    - اسم كل متدخل وصفته (مثل: النائب، الوزير، رئيس اللجنة...).
    - تلخيص دقيق وموضوعي لمضمون كل مداخلة دون إطناب.
    - الإشارة إلى الرئاسة (من ترأس الجلسة).
    - أي وقائع تنظيمية هامة أثناء الجلسة (مقاطعات، تنبيهات، رفع الجلسة مؤقتاً... إلخ)، إن وُجدت.

    يرجى عدم تضمين المقدمة أو التوصيات الختامية، والتركيز فقط على قسم "سير الجلسة".

    نص التفريغ الكامل هو:

    {texte_brut}
    """
    response = model.generate_content(prompt)
    return response.text.strip()

def analyze_transcription(texte_brut: str) -> str:
    prompt = f"""
    أريد منك إجراء تحليل دلالي (Analyse sémantique) لمحتوى النص التالي، وهو تفريغ حرفي لمجريات جلسة نقاشية في سياق برلماني أو مؤسسي.

    اعتمد على تقنيات معالجة اللغة الطبيعية (NLP) لاستخلاص تقرير تحليلي رسمي باللغة العربية الفصحى يتضمن المحاور التالية:

    1. تحليل المشاعر العامة (sentiment analysis): تصنيف المداخلات حسب طبيعتها (نقدية، بنّاءة، توافقية، حيادية...).
    2. تحديد المواضيع الرئيسية المتكررة (themes récurrents): أبرز القضايا التي تم التركيز عليها خلال الجلسة.
    3. رصد الإشكاليات المطروحة (problèmes soulevés): العقبات أو المشاكل التي أثيرت في المداخلات.
    4. استخلاص فرص التحسين والتوصيات (opportunités d'amélioration): مجالات يُمكن تطويرها بناءً على محتوى النقاش.

    يُرجى تقديم التحليل في صيغة تقرير منظم وواضح، باللغة العربية الفصحى، مع الحفاظ على الطابع الرسمي والحيادي، كما هو معمول به في تقارير تحليل جلسات البرلمان المغربي.

    نص التفريغ هو:

    {texte_brut}
    """

    response = model.generate_content(prompt)
    return response.text.strip()